{print} = require 'util'
{exec} = require 'child_process'


package = "Backpack"

src_path    = "./src"
lib_path    = "./lib"
js_path     = "#{lib_path}/js"
bndl_path   = "#{lib_path}/#{package}-bundle.js"
min_path    = "#{lib_path}/#{package}-bundle.min.js"
nm_path     = "./node_modules"
bin_path    = "#{nm_path}/.bin"



run = (command, callback) ->
  exec command, (err, stdout, stderr) ->
    console.warn stderr if stderr
    callback?() unless err


# ----------------------------------
# Commands
# ----------------------------------

compile = (watch, callback) ->
  # creates /lib/js
  run "coffee -co #{js_path} #{src_path}", callback

watchJS = (callback) ->
  run "coffee -wco #{js_path} #{src_path}", callback

watchBundle = (callback) ->
  run "coffee -j #{bndl_path} -wco #{lib_path} #{src_path}", callback

bundle = (callback) ->
  # creates /lib/Package-bundle.js
  run "coffee -j #{bndl_path} -co #{lib_path} #{src_path}", callback

minify = (callback) ->
  # creates /lib/Backpack-bundle.min.js
  run "#{bin_path}/uglifyjs  -o #{min_path} #{bndl_path}", callback

test = (callback) ->
  run "mocha --require #{nm_path}/expect.js/expect.js --ui bdd", callback

docs = (callback) ->
  run "docco #{src_path}/*.coffee"


# ----------------------------------
# Tasks
# ----------------------------------

task 'compile', 'Compile CoffeeScript source files', ->
  compile()

task 'bundle', "Bundle /lib for the browser", ->
  bundle(compile)

task 'build', "Creates /lib/package-bundle.js & /lib/package-bundle.min.js", ->
  bundle(minify)

task 'watch:js', "Recompile CoffeeScript source files when modified to individual .js files", ->
  watchJS()

task 'watch:bundle', "Recompile CoffeeScript source files when modified to package-bundle.js", ->
  watchBundle()

task 'test', "Run tests", ->
  test()

task 'docs', 'Generate annotated source code with Docco', ->
  docs()